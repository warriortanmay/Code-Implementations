//Implementing Stack using linkedlist.
class Stack{
    class Node{
        int data;
        Node next;
        Node(int data,Node next){
            this.data=data;
            this.next=null;
        }
    }
    Node top;
    Stack(){
        top=null;
    }
    void push(int a){
        Node new_node=new Node(a,null);
        if(top==null) top=new_node;
        else{
            new_node.next=top;
            top=new_node;
        }
    }
    void pop(){
        if(top==null) System.out.println("UnderFlow");
        else{
            int res=top.data;
            top=top.next;
            System.out.println(res);
        }
    }
    void peek(){
        if(top==null) System.out.println("UnderFlow");
        else{
            int res=top.data;
            top=top.next;
            System.out.println(res);
        }
    }
    int size(){
        Node temp=top;
        int count=0;
        while(temp!=null){
            count++;
            temp=temp.next;
        }
        return count;
    }
    void display(){
        System.out.println("these are all elements in stack");
        Node temp=top;
        while(temp!=null){
            System.out.println(temp.data);
            temp=temp.next;
        }
        System.out.println("till here");
    }
    boolean isEmpty(){
        if(top==null) return true;
        else return false;
    }
}
public class Main
{
	public static void main(String[] args) {
		System.out.println("Hello World");
		Stack st=new Stack();
		st.pop();
		st.push(5);
		st.push(3);
		st.push(7);
		st.push(9);
		st.display();
		st.pop();
		st.peek();
		System.out.println(st.size());
		System.out.println(st.isEmpty());
		st.pop();
	}
}
